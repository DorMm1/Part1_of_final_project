create function get_airline_by_username(username1 text)
returns table("id" bigint,"company_name" text,"country_id" int, "user_id" bigint)
language plpgsql
AS
$$
BEGIN
	return QUERY
	select * from "airline_companies"
	inner join "users" on users.username = username1;
END	
$$


create function get_customer_by_username(username1 text)
returns table("id" bigint,"customer_firstname" text,"customer_lastname" text,"address" text, "phone_no" text,
			  "credit_card_no" text, "user_id" bigint)
language plpgsql
AS
$$
BEGIN
	return QUERY
	select * from "customers"
	inner join "users" on users.username = username1;
END	
$$




create function get_user_by_username(username1 text)
returns table("id" bigint, "username" text, "userpassword" text, "email" text, "user_role" int)
language plpgsql
AS
$$
BEGIN
	return QUERY
	select * from "users"
	where users.username = username1;
END	
$$

create function get_flights_by_parameters(_origin_country_id int, _destination_county_id int, _date date)
returns table("id" bigint, "airline_company_id" int, "origin_county_id" int, "destination_county_id" int,
			 "departure_time" timestamp, "landing_time" timestamp, "remaining_tickets" int)
language plpgsql
AS
$$
BEGIN
	RETURN QUERY
	SELECT * FROM "flights" WHERE flights.origin_country_id = _origin_country_id AND
	flights.destination_country_id = _destination_county_id AND flights.departure_time::date = _date;
END	
$$

create function get_flights_by_airline_id(_airline_id bigint)
returns table("id" bigint, "airline_company_id" int, "origin_county_id" int, "destination_county_id" int,
			 "departure_time" timestamp, "landing_time" timestamp, "remaining_tickets" int)
language plpgsql
AS
$$
BEGIN
	RETURN QUERY
	SELECT * FROM "flights" WHERE flights.airline_company_id = _airline_id;
END	
$$

create OR replace function get_arrival_flights(_country_id int)
returns table("id" bigint, "airline_company_id" int, "origin_county_id" int, "destination_county_id" int,
			 "departure_time" timestamp, "landing_time" timestamp, "remaining_tickets" int)
language plpgsql
AS
$$
BEGIN
	RETURN QUERY
	SELECT * FROM "flights" where flights.origin_country_id = _country_id
	AND flights.landing_time > NOW()::timestamp AND flights.landing_time < (NOW()::timestamp + interval '12 hour');
END	
$$




create OR replace function get_departure_flights(_country_id int)
returns table("id" bigint, "airline_company_id" int, "origin_county_id" int, "destination_county_id" int,
			 "departure_time" timestamp, "landing_time" timestamp, "remaining_tickets" int)
language plpgsql
AS
$$
BEGIN
	RETURN QUERY
	SELECT * FROM "flights" where flights.origin_country_id = _country_id
	AND flights.departure_time > NOW()::timestamp AND flights.departure_time < (NOW()::timestamp + interval '12 hour');
END	
$$




create function get_tickets_by_customer(_customer_id bigint)
returns table("id" bigint, "flight_id" bigint, "customer_id" bigint)
language plpgsql
AS
$$
BEGIN
	RETURN QUERY
	SELECT * FROM "tickets" where tickets.customer_id = _customer_id;
END	
$$